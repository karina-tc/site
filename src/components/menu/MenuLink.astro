---
export interface Props {
    href: string;
    label: string;
}

const { href, label } = Astro.props;
const pathname = new URL(Astro.request.url).pathname;
const components = pathname.split('/')
const root = "/" + components[1]

---

<a class:list={`link nav-listener ${root === href ? 'active' : ''}`} href={href}>{label}</a>

<style lang="scss">
    .link {
        color: var(--theme-ink);
        height: 32px;
        text-decoration: none;
        border-bottom: 2px solid transparent;
        position: relative;
        padding-bottom: 4px;
        transition: color 0.5s ease-in-out;
        will-change: transform;

        &::after {
            content: "";
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%;
            height: 2px;
            background-color: var(--theme-ink);
            transform: scaleX(0);
            transform-origin: left;
            transition: all 0.5s ease-in-out;
        }

        &:hover::after {
            transform: scaleX(1);
        }

        &.active {
            //font-weight: 600;
            &::after {
                transform: scaleX(1);
            }
        }

        &.invert {
            color: var(--white);
            &.active::after, &:hover::after {
                background-color: var(--white);
            }
        }
    }
</style>